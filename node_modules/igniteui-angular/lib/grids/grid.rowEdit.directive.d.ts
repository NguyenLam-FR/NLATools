import { ElementRef } from '@angular/core';
import { GridBaseAPIService } from './api.service';
/** @hidden */
import * as ɵngcc0 from '@angular/core';
export declare class IgxRowEditTemplateDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxRowEditTemplateDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxRowEditTemplateDirective, "[igxRowEdit]", never, {}, {}, never>;
}
/** @hidden */
export declare class IgxRowEditTextDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxRowEditTextDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxRowEditTextDirective, "[igxRowEditText]", never, {}, {}, never>;
}
/** @hidden */
export declare class IgxRowEditActionsDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxRowEditActionsDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxRowEditActionsDirective, "[igxRowEditActions]", never, {}, {}, never>;
}
/** @hidden */
export declare class IgxRowEditTabStopDirective {
    api: GridBaseAPIService<any>;
    element: ElementRef;
    private currentCellIndex;
    constructor(api: GridBaseAPIService<any>, element: ElementRef);
    get grid(): any;
    handleTab(event: KeyboardEvent): void;
    handleEscape(event: KeyboardEvent): void;
    /**
     * Moves focus to first/last editable cell in the editable row and put the cell in edit mode.
     * If cell is out of view first scrolls to the cell
     * @param event keyboard event containing information about whether SHIFT key was pressed
     */
    private move;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxRowEditTabStopDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxRowEditTabStopDirective, "[igxRowEditTabStop]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC5yb3dFZGl0LmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJncmlkLnJvd0VkaXQuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgR3JpZEJhc2VBUElTZXJ2aWNlIH0gZnJvbSAnLi9hcGkuc2VydmljZSc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4Um93RWRpdFRlbXBsYXRlRGlyZWN0aXZlIHtcbn1cbi8qKiBAaGlkZGVuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hSb3dFZGl0VGV4dERpcmVjdGl2ZSB7XG59XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4Um93RWRpdEFjdGlvbnNEaXJlY3RpdmUge1xufVxuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneFJvd0VkaXRUYWJTdG9wRGlyZWN0aXZlIHtcbiAgICBhcGk6IEdyaWRCYXNlQVBJU2VydmljZTxhbnk+O1xuICAgIGVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gICAgcHJpdmF0ZSBjdXJyZW50Q2VsbEluZGV4O1xuICAgIGNvbnN0cnVjdG9yKGFwaTogR3JpZEJhc2VBUElTZXJ2aWNlPGFueT4sIGVsZW1lbnQ6IEVsZW1lbnRSZWYpO1xuICAgIGdldCBncmlkKCk6IGFueTtcbiAgICBoYW5kbGVUYWIoZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xuICAgIGhhbmRsZUVzY2FwZShldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogTW92ZXMgZm9jdXMgdG8gZmlyc3QvbGFzdCBlZGl0YWJsZSBjZWxsIGluIHRoZSBlZGl0YWJsZSByb3cgYW5kIHB1dCB0aGUgY2VsbCBpbiBlZGl0IG1vZGUuXG4gICAgICogSWYgY2VsbCBpcyBvdXQgb2YgdmlldyBmaXJzdCBzY3JvbGxzIHRvIHRoZSBjZWxsXG4gICAgICogQHBhcmFtIGV2ZW50IGtleWJvYXJkIGV2ZW50IGNvbnRhaW5pbmcgaW5mb3JtYXRpb24gYWJvdXQgd2hldGhlciBTSElGVCBrZXkgd2FzIHByZXNzZWRcbiAgICAgKi9cbiAgICBwcml2YXRlIG1vdmU7XG59XG4iXX0=