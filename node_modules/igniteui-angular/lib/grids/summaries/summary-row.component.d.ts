import { QueryList, ElementRef, ChangeDetectorRef, DoCheck } from '@angular/core';
import { IgxSummaryResult } from './grid-summary';
import { IgxSummaryCellComponent } from './summary-cell.component';
import { IgxGridForOfDirective } from '../../directives/for-of/for_of.directive';
import { GridBaseAPIService } from '../api.service';
import { IgxGridBaseDirective } from '../grid-base.directive';
import { IgxColumnComponent } from '../columns/column.component';
import { GridType } from '../common/grid.interface';
import * as ɵngcc0 from '@angular/core';
export declare class IgxSummaryRowComponent implements DoCheck {
    gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>;
    element: ElementRef;
    cdr: ChangeDetectorRef;
    summaries: Map<string, IgxSummaryResult[]>;
    gridID: any;
    index: number;
    firstCellIndentation: number;
    get dataRowIndex(): number;
    get minHeight(): number;
    _summaryCells: QueryList<IgxSummaryCellComponent>;
    get summaryCells(): QueryList<IgxSummaryCellComponent>;
    set summaryCells(cells: QueryList<IgxSummaryCellComponent>);
    /**
     * @hidden
     */
    virtDirRow: IgxGridForOfDirective<any>;
    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>, element: ElementRef, cdr: ChangeDetectorRef);
    ngDoCheck(): void;
    get grid(): IgxGridBaseDirective & GridType;
    get nativeElement(): any;
    getColumnSummaries(columnName: any): IgxSummaryResult[];
    /**
     * @hidden
     * @internal
     */
    isCellActive(visibleColumnIndex: any): boolean;
    /**
     * @hidden
     */
    get pinnedColumns(): IgxColumnComponent[];
    /**
     * @hidden
     */
    get unpinnedColumns(): IgxColumnComponent[];
    getContext(row: any): {
        $implicit: any;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxSummaryRowComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxSummaryRowComponent, "igx-grid-summary-row", never, { "firstCellIndentation": "firstCellIndentation"; "summaries": "summaries"; "gridID": "gridID"; "index": "index"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VtbWFyeS1yb3cuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInN1bW1hcnktcm93LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBRdWVyeUxpc3QsIEVsZW1lbnRSZWYsIENoYW5nZURldGVjdG9yUmVmLCBEb0NoZWNrIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hTdW1tYXJ5UmVzdWx0IH0gZnJvbSAnLi9ncmlkLXN1bW1hcnknO1xuaW1wb3J0IHsgSWd4U3VtbWFyeUNlbGxDb21wb25lbnQgfSBmcm9tICcuL3N1bW1hcnktY2VsbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4R3JpZEZvck9mRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9mb3Itb2YvZm9yX29mLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBHcmlkQmFzZUFQSVNlcnZpY2UgfSBmcm9tICcuLi9hcGkuc2VydmljZSc7XG5pbXBvcnQgeyBJZ3hHcmlkQmFzZURpcmVjdGl2ZSB9IGZyb20gJy4uL2dyaWQtYmFzZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSWd4Q29sdW1uQ29tcG9uZW50IH0gZnJvbSAnLi4vY29sdW1ucy9jb2x1bW4uY29tcG9uZW50JztcbmltcG9ydCB7IEdyaWRUeXBlIH0gZnJvbSAnLi4vY29tbW9uL2dyaWQuaW50ZXJmYWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneFN1bW1hcnlSb3dDb21wb25lbnQgaW1wbGVtZW50cyBEb0NoZWNrIHtcbiAgICBncmlkQVBJOiBHcmlkQmFzZUFQSVNlcnZpY2U8SWd4R3JpZEJhc2VEaXJlY3RpdmUgJiBHcmlkVHlwZT47XG4gICAgZWxlbWVudDogRWxlbWVudFJlZjtcbiAgICBjZHI6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIHN1bW1hcmllczogTWFwPHN0cmluZywgSWd4U3VtbWFyeVJlc3VsdFtdPjtcbiAgICBncmlkSUQ6IGFueTtcbiAgICBpbmRleDogbnVtYmVyO1xuICAgIGZpcnN0Q2VsbEluZGVudGF0aW9uOiBudW1iZXI7XG4gICAgZ2V0IGRhdGFSb3dJbmRleCgpOiBudW1iZXI7XG4gICAgZ2V0IG1pbkhlaWdodCgpOiBudW1iZXI7XG4gICAgX3N1bW1hcnlDZWxsczogUXVlcnlMaXN0PElneFN1bW1hcnlDZWxsQ29tcG9uZW50PjtcbiAgICBnZXQgc3VtbWFyeUNlbGxzKCk6IFF1ZXJ5TGlzdDxJZ3hTdW1tYXJ5Q2VsbENvbXBvbmVudD47XG4gICAgc2V0IHN1bW1hcnlDZWxscyhjZWxsczogUXVlcnlMaXN0PElneFN1bW1hcnlDZWxsQ29tcG9uZW50Pik7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHZpcnREaXJSb3c6IElneEdyaWRGb3JPZkRpcmVjdGl2ZTxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKGdyaWRBUEk6IEdyaWRCYXNlQVBJU2VydmljZTxJZ3hHcmlkQmFzZURpcmVjdGl2ZSAmIEdyaWRUeXBlPiwgZWxlbWVudDogRWxlbWVudFJlZiwgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XG4gICAgZ2V0IGdyaWQoKTogSWd4R3JpZEJhc2VEaXJlY3RpdmUgJiBHcmlkVHlwZTtcbiAgICBnZXQgbmF0aXZlRWxlbWVudCgpOiBhbnk7XG4gICAgZ2V0Q29sdW1uU3VtbWFyaWVzKGNvbHVtbk5hbWU6IGFueSk6IElneFN1bW1hcnlSZXN1bHRbXTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgaXNDZWxsQWN0aXZlKHZpc2libGVDb2x1bW5JbmRleDogYW55KTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IHBpbm5lZENvbHVtbnMoKTogSWd4Q29sdW1uQ29tcG9uZW50W107XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCB1bnBpbm5lZENvbHVtbnMoKTogSWd4Q29sdW1uQ29tcG9uZW50W107XG4gICAgZ2V0Q29udGV4dChyb3c6IGFueSk6IHtcbiAgICAgICAgJGltcGxpY2l0OiBhbnk7XG4gICAgfTtcbn1cbiJdfQ==