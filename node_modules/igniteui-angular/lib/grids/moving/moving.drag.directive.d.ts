import { OnDestroy, ElementRef, ViewContainerRef, NgZone, Renderer2, ChangeDetectorRef } from '@angular/core';
import { IgxDragDirective } from '../../directives/drag-drop/drag-drop.directive';
import { IgxColumnComponent } from '../columns/column.component';
import { IgxColumnMovingService } from './moving.service';
/**
 * @hidden
 * @internal
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxColumnMovingDragDirective extends IgxDragDirective implements OnDestroy {
    element: ElementRef<HTMLElement>;
    viewContainer: ViewContainerRef;
    zone: NgZone;
    renderer: Renderer2;
    cdr: ChangeDetectorRef;
    private cms;
    set data(val: any);
    get column(): IgxColumnComponent;
    get draggable(): boolean;
    get icon(): HTMLElement;
    private subscription$;
    private _column;
    private _ghostClass;
    private ghostImgIconClass;
    private ghostImgIconGroupClass;
    private columnSelectedClass;
    constructor(element: ElementRef<HTMLElement>, viewContainer: ViewContainerRef, zone: NgZone, renderer: Renderer2, cdr: ChangeDetectorRef, cms: IgxColumnMovingService);
    ngOnDestroy(): void;
    onEscape(event: any): void;
    onPointerDown(event: any): void;
    onPointerMove(event: any): void;
    onPointerUp(event: any): void;
    protected createGhost(pageX: any, pageY: any): void;
    private _unsubscribe;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxColumnMovingDragDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxColumnMovingDragDirective, "[igxColumnMovingDrag]", never, { "data": "igxColumnMovingDrag"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW92aW5nLmRyYWcuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbIm1vdmluZy5kcmFnLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25EZXN0cm95LCBFbGVtZW50UmVmLCBWaWV3Q29udGFpbmVyUmVmLCBOZ1pvbmUsIFJlbmRlcmVyMiwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneERyYWdEaXJlY3RpdmUgfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2RyYWctZHJvcC9kcmFnLWRyb3AuZGlyZWN0aXZlJztcbmltcG9ydCB7IElneENvbHVtbkNvbXBvbmVudCB9IGZyb20gJy4uL2NvbHVtbnMvY29sdW1uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hDb2x1bW5Nb3ZpbmdTZXJ2aWNlIH0gZnJvbSAnLi9tb3Zpbmcuc2VydmljZSc7XG4vKipcbiAqIEBoaWRkZW5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hDb2x1bW5Nb3ZpbmdEcmFnRGlyZWN0aXZlIGV4dGVuZHMgSWd4RHJhZ0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgZWxlbWVudDogRWxlbWVudFJlZjxIVE1MRWxlbWVudD47XG4gICAgdmlld0NvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZjtcbiAgICB6b25lOiBOZ1pvbmU7XG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMjtcbiAgICBjZHI6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIHByaXZhdGUgY21zO1xuICAgIHNldCBkYXRhKHZhbDogYW55KTtcbiAgICBnZXQgY29sdW1uKCk6IElneENvbHVtbkNvbXBvbmVudDtcbiAgICBnZXQgZHJhZ2dhYmxlKCk6IGJvb2xlYW47XG4gICAgZ2V0IGljb24oKTogSFRNTEVsZW1lbnQ7XG4gICAgcHJpdmF0ZSBzdWJzY3JpcHRpb24kO1xuICAgIHByaXZhdGUgX2NvbHVtbjtcbiAgICBwcml2YXRlIF9naG9zdENsYXNzO1xuICAgIHByaXZhdGUgZ2hvc3RJbWdJY29uQ2xhc3M7XG4gICAgcHJpdmF0ZSBnaG9zdEltZ0ljb25Hcm91cENsYXNzO1xuICAgIHByaXZhdGUgY29sdW1uU2VsZWN0ZWRDbGFzcztcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBFbGVtZW50UmVmPEhUTUxFbGVtZW50Piwgdmlld0NvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZiwgem9uZTogTmdab25lLCByZW5kZXJlcjogUmVuZGVyZXIyLCBjZHI6IENoYW5nZURldGVjdG9yUmVmLCBjbXM6IElneENvbHVtbk1vdmluZ1NlcnZpY2UpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgb25Fc2NhcGUoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25Qb2ludGVyRG93bihldmVudDogYW55KTogdm9pZDtcbiAgICBvblBvaW50ZXJNb3ZlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uUG9pbnRlclVwKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBjcmVhdGVHaG9zdChwYWdlWDogYW55LCBwYWdlWTogYW55KTogdm9pZDtcbiAgICBwcml2YXRlIF91bnN1YnNjcmliZTtcbn1cbiJdfQ==