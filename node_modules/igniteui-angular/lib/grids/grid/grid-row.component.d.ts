import { ElementRef, ChangeDetectorRef } from '@angular/core';
import { IgxGridComponent } from './grid.component';
import { IgxRowDirective } from '../row.directive';
import { GridBaseAPIService } from '../api.service';
import { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';
import * as ɵngcc0 from '@angular/core';
export declare class IgxGridRowComponent extends IgxRowDirective<IgxGridComponent> {
    gridAPI: GridBaseAPIService<IgxGridComponent>;
    crudService: IgxGridCRUDService;
    selectionService: IgxGridSelectionService;
    element: ElementRef;
    cdr: ChangeDetectorRef;
    constructor(gridAPI: GridBaseAPIService<IgxGridComponent>, crudService: IgxGridCRUDService, selectionService: IgxGridSelectionService, element: ElementRef, cdr: ChangeDetectorRef);
    get hasColumnLayouts(): boolean;
    getContext(col: any, row: any): {
        $implicit: any;
        row: any;
    };
    get mrlRightPinnedOffset(): string;
    getContextMRL(pinnedCols: any, row: any): {
        $implicit: any;
        row: any;
    };
    get expanded(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridRowComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxGridRowComponent, "igx-grid-row", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1yb3cuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImdyaWQtcm93LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi9ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hSb3dEaXJlY3RpdmUgfSBmcm9tICcuLi9yb3cuZGlyZWN0aXZlJztcbmltcG9ydCB7IEdyaWRCYXNlQVBJU2VydmljZSB9IGZyb20gJy4uL2FwaS5zZXJ2aWNlJztcbmltcG9ydCB7IElneEdyaWRTZWxlY3Rpb25TZXJ2aWNlLCBJZ3hHcmlkQ1JVRFNlcnZpY2UgfSBmcm9tICcuLi9zZWxlY3Rpb24vc2VsZWN0aW9uLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4R3JpZFJvd0NvbXBvbmVudCBleHRlbmRzIElneFJvd0RpcmVjdGl2ZTxJZ3hHcmlkQ29tcG9uZW50PiB7XG4gICAgZ3JpZEFQSTogR3JpZEJhc2VBUElTZXJ2aWNlPElneEdyaWRDb21wb25lbnQ+O1xuICAgIGNydWRTZXJ2aWNlOiBJZ3hHcmlkQ1JVRFNlcnZpY2U7XG4gICAgc2VsZWN0aW9uU2VydmljZTogSWd4R3JpZFNlbGVjdGlvblNlcnZpY2U7XG4gICAgZWxlbWVudDogRWxlbWVudFJlZjtcbiAgICBjZHI6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIGNvbnN0cnVjdG9yKGdyaWRBUEk6IEdyaWRCYXNlQVBJU2VydmljZTxJZ3hHcmlkQ29tcG9uZW50PiwgY3J1ZFNlcnZpY2U6IElneEdyaWRDUlVEU2VydmljZSwgc2VsZWN0aW9uU2VydmljZTogSWd4R3JpZFNlbGVjdGlvblNlcnZpY2UsIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIGdldCBoYXNDb2x1bW5MYXlvdXRzKCk6IGJvb2xlYW47XG4gICAgZ2V0Q29udGV4dChjb2w6IGFueSwgcm93OiBhbnkpOiB7XG4gICAgICAgICRpbXBsaWNpdDogYW55O1xuICAgICAgICByb3c6IGFueTtcbiAgICB9O1xuICAgIGdldCBtcmxSaWdodFBpbm5lZE9mZnNldCgpOiBzdHJpbmc7XG4gICAgZ2V0Q29udGV4dE1STChwaW5uZWRDb2xzOiBhbnksIHJvdzogYW55KToge1xuICAgICAgICAkaW1wbGljaXQ6IGFueTtcbiAgICAgICAgcm93OiBhbnk7XG4gICAgfTtcbiAgICBnZXQgZXhwYW5kZWQoKTogYm9vbGVhbjtcbn1cbiJdfQ==