import { ChangeDetectorRef, AfterViewInit, TemplateRef, ElementRef } from '@angular/core';
import { IgxColumnComponent } from '../../columns/column.component';
import { IgxFilteringService, ExpressionUI } from '../grid-filtering.service';
import { IgxToggleDirective } from '../../../directives/toggle/toggle.directive';
import { IgxOverlayService } from '../../../services/public_api';
import { ILogicOperatorChangedArgs } from './excel-style-default-expression.component';
import { DisplayDensity } from '../../../core/density';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxExcelStyleCustomDialogComponent implements AfterViewInit {
    private cdr;
    expressionsList: ExpressionUI[];
    private _customDialogPositionSettings;
    private _customDialogOverlaySettings;
    column: IgxColumnComponent;
    selectedOperator: string;
    filteringService: IgxFilteringService;
    overlayComponentId: string;
    overlayService: IgxOverlayService;
    displayDensity: DisplayDensity;
    private expressionComponents;
    private expressionDateComponents;
    toggle: IgxToggleDirective;
    protected defaultExpressionTemplate: TemplateRef<any>;
    protected dateExpressionTemplate: TemplateRef<any>;
    protected expressionsContainer: ElementRef;
    constructor(cdr: ChangeDetectorRef);
    ngAfterViewInit(): void;
    get template(): TemplateRef<any>;
    get grid(): any;
    onCustomDialogOpening(): void;
    onCustomDialogOpened(): void;
    open(esf: any): void;
    onClearButtonClick(): void;
    closeDialog(): void;
    onApplyButtonClick(): void;
    onAddButtonClick(): void;
    onExpressionRemoved(event: ExpressionUI): void;
    onLogicOperatorChanged(event: ILogicOperatorChangedArgs): void;
    onKeyDown(eventArgs: any): void;
    onApplyButtonKeyDown(eventArgs: any): void;
    private createCondition;
    private markChildrenForCheck;
    private createInitialExpressionUIElement;
    private scrollToBottom;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxExcelStyleCustomDialogComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxExcelStyleCustomDialogComponent, "igx-excel-style-custom-dialog", never, { "expressionsList": "expressionsList"; "column": "column"; "selectedOperator": "selectedOperator"; "filteringService": "filteringService"; "overlayComponentId": "overlayComponentId"; "overlayService": "overlayService"; "displayDensity": "displayDensity"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZWwtc3R5bGUtY3VzdG9tLWRpYWxvZy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZXhjZWwtc3R5bGUtY3VzdG9tLWRpYWxvZy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIEFmdGVyVmlld0luaXQsIFRlbXBsYXRlUmVmLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hDb2x1bW5Db21wb25lbnQgfSBmcm9tICcuLi8uLi9jb2x1bW5zL2NvbHVtbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4RmlsdGVyaW5nU2VydmljZSwgRXhwcmVzc2lvblVJIH0gZnJvbSAnLi4vZ3JpZC1maWx0ZXJpbmcuc2VydmljZSc7XG5pbXBvcnQgeyBJZ3hUb2dnbGVEaXJlY3RpdmUgfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL3RvZ2dsZS90b2dnbGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IElneE92ZXJsYXlTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvcHVibGljX2FwaSc7XG5pbXBvcnQgeyBJTG9naWNPcGVyYXRvckNoYW5nZWRBcmdzIH0gZnJvbSAnLi9leGNlbC1zdHlsZS1kZWZhdWx0LWV4cHJlc3Npb24uY29tcG9uZW50JztcbmltcG9ydCB7IERpc3BsYXlEZW5zaXR5IH0gZnJvbSAnLi4vLi4vLi4vY29yZS9kZW5zaXR5Jztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hFeGNlbFN0eWxlQ3VzdG9tRGlhbG9nQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gICAgcHJpdmF0ZSBjZHI7XG4gICAgZXhwcmVzc2lvbnNMaXN0OiBFeHByZXNzaW9uVUlbXTtcbiAgICBwcml2YXRlIF9jdXN0b21EaWFsb2dQb3NpdGlvblNldHRpbmdzO1xuICAgIHByaXZhdGUgX2N1c3RvbURpYWxvZ092ZXJsYXlTZXR0aW5ncztcbiAgICBjb2x1bW46IElneENvbHVtbkNvbXBvbmVudDtcbiAgICBzZWxlY3RlZE9wZXJhdG9yOiBzdHJpbmc7XG4gICAgZmlsdGVyaW5nU2VydmljZTogSWd4RmlsdGVyaW5nU2VydmljZTtcbiAgICBvdmVybGF5Q29tcG9uZW50SWQ6IHN0cmluZztcbiAgICBvdmVybGF5U2VydmljZTogSWd4T3ZlcmxheVNlcnZpY2U7XG4gICAgZGlzcGxheURlbnNpdHk6IERpc3BsYXlEZW5zaXR5O1xuICAgIHByaXZhdGUgZXhwcmVzc2lvbkNvbXBvbmVudHM7XG4gICAgcHJpdmF0ZSBleHByZXNzaW9uRGF0ZUNvbXBvbmVudHM7XG4gICAgdG9nZ2xlOiBJZ3hUb2dnbGVEaXJlY3RpdmU7XG4gICAgcHJvdGVjdGVkIGRlZmF1bHRFeHByZXNzaW9uVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgcHJvdGVjdGVkIGRhdGVFeHByZXNzaW9uVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgcHJvdGVjdGVkIGV4cHJlc3Npb25zQ29udGFpbmVyOiBFbGVtZW50UmVmO1xuICAgIGNvbnN0cnVjdG9yKGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIGdldCB0ZW1wbGF0ZSgpOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGdldCBncmlkKCk6IGFueTtcbiAgICBvbkN1c3RvbURpYWxvZ09wZW5pbmcoKTogdm9pZDtcbiAgICBvbkN1c3RvbURpYWxvZ09wZW5lZCgpOiB2b2lkO1xuICAgIG9wZW4oZXNmOiBhbnkpOiB2b2lkO1xuICAgIG9uQ2xlYXJCdXR0b25DbGljaygpOiB2b2lkO1xuICAgIGNsb3NlRGlhbG9nKCk6IHZvaWQ7XG4gICAgb25BcHBseUJ1dHRvbkNsaWNrKCk6IHZvaWQ7XG4gICAgb25BZGRCdXR0b25DbGljaygpOiB2b2lkO1xuICAgIG9uRXhwcmVzc2lvblJlbW92ZWQoZXZlbnQ6IEV4cHJlc3Npb25VSSk6IHZvaWQ7XG4gICAgb25Mb2dpY09wZXJhdG9yQ2hhbmdlZChldmVudDogSUxvZ2ljT3BlcmF0b3JDaGFuZ2VkQXJncyk6IHZvaWQ7XG4gICAgb25LZXlEb3duKGV2ZW50QXJnczogYW55KTogdm9pZDtcbiAgICBvbkFwcGx5QnV0dG9uS2V5RG93bihldmVudEFyZ3M6IGFueSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBjcmVhdGVDb25kaXRpb247XG4gICAgcHJpdmF0ZSBtYXJrQ2hpbGRyZW5Gb3JDaGVjaztcbiAgICBwcml2YXRlIGNyZWF0ZUluaXRpYWxFeHByZXNzaW9uVUlFbGVtZW50O1xuICAgIHByaXZhdGUgc2Nyb2xsVG9Cb3R0b207XG59XG4iXX0=