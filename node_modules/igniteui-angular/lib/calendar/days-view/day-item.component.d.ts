import { EventEmitter, ElementRef } from '@angular/core';
import { ICalendarDate } from '../calendar';
import { DateRangeDescriptor } from '../../core/dates';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxDayItemComponent {
    private elementRef;
    date: ICalendarDate;
    selection: string;
    /**
     * Returns boolean indicating if the day is selected
     *
     */
    get selected(): any;
    /**
     * Selects the day
     */
    set selected(value: any);
    disabledDates: DateRangeDescriptor[];
    outOfRangeDates: DateRangeDescriptor[];
    specialDates: DateRangeDescriptor[];
    hideOutsideDays: boolean;
    isLastInRange: boolean;
    isFirstInRange: boolean;
    isWithinRange: boolean;
    onDateSelection: EventEmitter<ICalendarDate>;
    get isCurrentMonth(): boolean;
    get isPreviousMonth(): boolean;
    get isNextMonth(): boolean;
    get nativeElement(): any;
    get isSelectedCSS(): boolean;
    get isInactive(): boolean;
    get isHidden(): boolean;
    get isToday(): boolean;
    get isWeekend(): boolean;
    get isDisabled(): boolean;
    get isOutOfRange(): boolean;
    get isFocusable(): boolean;
    get isWithinRangeCSS(): boolean;
    get isSpecial(): boolean;
    get defaultCSS(): boolean;
    get isDisabledCSS(): boolean;
    get isSingleSelection(): boolean;
    get tabindex(): number;
    private _selected;
    constructor(elementRef: ElementRef);
    onSelect(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxDayItemComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxDayItemComponent, "igx-day-item", never, { "hideOutsideDays": "hideOutsideDays"; "isLastInRange": "isLastInRange"; "isFirstInRange": "isFirstInRange"; "isWithinRange": "isWithinRange"; "selected": "selected"; "date": "date"; "selection": "selection"; "disabledDates": "disabledDates"; "outOfRangeDates": "outOfRangeDates"; "specialDates": "specialDates"; }, { "onDateSelection": "onDateSelection"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF5LWl0ZW0uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImRheS1pdGVtLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJQ2FsZW5kYXJEYXRlIH0gZnJvbSAnLi4vY2FsZW5kYXInO1xuaW1wb3J0IHsgRGF0ZVJhbmdlRGVzY3JpcHRvciB9IGZyb20gJy4uLy4uL2NvcmUvZGF0ZXMnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneERheUl0ZW1Db21wb25lbnQge1xuICAgIHByaXZhdGUgZWxlbWVudFJlZjtcbiAgICBkYXRlOiBJQ2FsZW5kYXJEYXRlO1xuICAgIHNlbGVjdGlvbjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYm9vbGVhbiBpbmRpY2F0aW5nIGlmIHRoZSBkYXkgaXMgc2VsZWN0ZWRcbiAgICAgKlxuICAgICAqL1xuICAgIGdldCBzZWxlY3RlZCgpOiBhbnk7XG4gICAgLyoqXG4gICAgICogU2VsZWN0cyB0aGUgZGF5XG4gICAgICovXG4gICAgc2V0IHNlbGVjdGVkKHZhbHVlOiBhbnkpO1xuICAgIGRpc2FibGVkRGF0ZXM6IERhdGVSYW5nZURlc2NyaXB0b3JbXTtcbiAgICBvdXRPZlJhbmdlRGF0ZXM6IERhdGVSYW5nZURlc2NyaXB0b3JbXTtcbiAgICBzcGVjaWFsRGF0ZXM6IERhdGVSYW5nZURlc2NyaXB0b3JbXTtcbiAgICBoaWRlT3V0c2lkZURheXM6IGJvb2xlYW47XG4gICAgaXNMYXN0SW5SYW5nZTogYm9vbGVhbjtcbiAgICBpc0ZpcnN0SW5SYW5nZTogYm9vbGVhbjtcbiAgICBpc1dpdGhpblJhbmdlOiBib29sZWFuO1xuICAgIG9uRGF0ZVNlbGVjdGlvbjogRXZlbnRFbWl0dGVyPElDYWxlbmRhckRhdGU+O1xuICAgIGdldCBpc0N1cnJlbnRNb250aCgpOiBib29sZWFuO1xuICAgIGdldCBpc1ByZXZpb3VzTW9udGgoKTogYm9vbGVhbjtcbiAgICBnZXQgaXNOZXh0TW9udGgoKTogYm9vbGVhbjtcbiAgICBnZXQgbmF0aXZlRWxlbWVudCgpOiBhbnk7XG4gICAgZ2V0IGlzU2VsZWN0ZWRDU1MoKTogYm9vbGVhbjtcbiAgICBnZXQgaXNJbmFjdGl2ZSgpOiBib29sZWFuO1xuICAgIGdldCBpc0hpZGRlbigpOiBib29sZWFuO1xuICAgIGdldCBpc1RvZGF5KCk6IGJvb2xlYW47XG4gICAgZ2V0IGlzV2Vla2VuZCgpOiBib29sZWFuO1xuICAgIGdldCBpc0Rpc2FibGVkKCk6IGJvb2xlYW47XG4gICAgZ2V0IGlzT3V0T2ZSYW5nZSgpOiBib29sZWFuO1xuICAgIGdldCBpc0ZvY3VzYWJsZSgpOiBib29sZWFuO1xuICAgIGdldCBpc1dpdGhpblJhbmdlQ1NTKCk6IGJvb2xlYW47XG4gICAgZ2V0IGlzU3BlY2lhbCgpOiBib29sZWFuO1xuICAgIGdldCBkZWZhdWx0Q1NTKCk6IGJvb2xlYW47XG4gICAgZ2V0IGlzRGlzYWJsZWRDU1MoKTogYm9vbGVhbjtcbiAgICBnZXQgaXNTaW5nbGVTZWxlY3Rpb24oKTogYm9vbGVhbjtcbiAgICBnZXQgdGFiaW5kZXgoKTogbnVtYmVyO1xuICAgIHByaXZhdGUgX3NlbGVjdGVkO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpO1xuICAgIG9uU2VsZWN0KCk6IHZvaWQ7XG59XG4iXX0=