import { EventEmitter } from '@angular/core';
import { IgxCalendarComponent } from '../calendar/public_api';
import { InteractionMode } from '../core/enums';
import { IgxDatePickerActionsDirective } from './date-picker.directives';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxCalendarContainerComponent {
    calendar: IgxCalendarComponent;
    mode: InteractionMode;
    vertical: boolean;
    cancelButtonLabel: string;
    todayButtonLabel: string;
    datePickerActions: IgxDatePickerActionsDirective;
    onClose: EventEmitter<any>;
    onTodaySelection: EventEmitter<any>;
    styleClass: string;
    get dropdownCSS(): boolean;
    get verticalCSS(): boolean;
    onEscape(event: any): void;
    /**
     * Returns whether the date-picker is in readonly dialog mode.
     *
     * @hidden
     */
    get isReadonly(): boolean;
    /**
     * Emits close event for the calendar.
     */
    closeCalendar(): void;
    /**
     * Emits today selection event for the calendar.
     */
    triggerTodaySelection(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxCalendarContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxCalendarContainerComponent, "igx-calendar-container", never, { "mode": "mode"; "vertical": "vertical"; "cancelButtonLabel": "cancelButtonLabel"; "todayButtonLabel": "todayButtonLabel"; "datePickerActions": "datePickerActions"; }, { "onClose": "onClose"; "onTodaySelection": "onTodaySelection"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItY29udGFpbmVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjYWxlbmRhci1jb250YWluZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4Q2FsZW5kYXJDb21wb25lbnQgfSBmcm9tICcuLi9jYWxlbmRhci9wdWJsaWNfYXBpJztcbmltcG9ydCB7IEludGVyYWN0aW9uTW9kZSB9IGZyb20gJy4uL2NvcmUvZW51bXMnO1xuaW1wb3J0IHsgSWd4RGF0ZVBpY2tlckFjdGlvbnNEaXJlY3RpdmUgfSBmcm9tICcuL2RhdGUtcGlja2VyLmRpcmVjdGl2ZXMnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneENhbGVuZGFyQ29udGFpbmVyQ29tcG9uZW50IHtcbiAgICBjYWxlbmRhcjogSWd4Q2FsZW5kYXJDb21wb25lbnQ7XG4gICAgbW9kZTogSW50ZXJhY3Rpb25Nb2RlO1xuICAgIHZlcnRpY2FsOiBib29sZWFuO1xuICAgIGNhbmNlbEJ1dHRvbkxhYmVsOiBzdHJpbmc7XG4gICAgdG9kYXlCdXR0b25MYWJlbDogc3RyaW5nO1xuICAgIGRhdGVQaWNrZXJBY3Rpb25zOiBJZ3hEYXRlUGlja2VyQWN0aW9uc0RpcmVjdGl2ZTtcbiAgICBvbkNsb3NlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvblRvZGF5U2VsZWN0aW9uOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgZ2V0IGRyb3Bkb3duQ1NTKCk6IGJvb2xlYW47XG4gICAgZ2V0IHZlcnRpY2FsQ1NTKCk6IGJvb2xlYW47XG4gICAgb25Fc2NhcGUoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB3aGV0aGVyIHRoZSBkYXRlLXBpY2tlciBpcyBpbiByZWFkb25seSBkaWFsb2cgbW9kZS5cbiAgICAgKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgaXNSZWFkb25seSgpOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEVtaXRzIGNsb3NlIGV2ZW50IGZvciB0aGUgY2FsZW5kYXIuXG4gICAgICovXG4gICAgY2xvc2VDYWxlbmRhcigpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEVtaXRzIHRvZGF5IHNlbGVjdGlvbiBldmVudCBmb3IgdGhlIGNhbGVuZGFyLlxuICAgICAqL1xuICAgIHRyaWdnZXJUb2RheVNlbGVjdGlvbigpOiB2b2lkO1xufVxuIl19